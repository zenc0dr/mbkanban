#!/bin/bash

# MBKanban Launcher
# –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º MBKanban

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_NAME="MBKanban"
SERVER_FILE="server.js"
PORT="8823"
PID_FILE="$SCRIPT_DIR/mbkanban.pid"
LOG_FILE="$SCRIPT_DIR/mbkanban.log"
NODE_BIN="node"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo -e "${BLUE}MBKanban Launcher${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä MBKanban"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä MBKanban"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä MBKanban"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  health    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
    echo "  $0 status   # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  $0 stop     # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
    echo ""
    echo "–ü–æ—Ä—Ç: $PORT"
    echo "URL: http://localhost:$PORT"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
is_server_running() {
    if [ -f "$PID_FILE" ]; then
        local pid=$(cat "$PID_FILE")
        if ps -p "$pid" > /dev/null 2>&1; then
            return 0
        else
            # PID —Ñ–∞–π–ª –µ—Å—Ç—å, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            rm -f "$PID_FILE"
            return 1
        fi
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PID —Å–µ—Ä–≤–µ—Ä–∞
get_server_pid() {
    if is_server_running; then
        cat "$PID_FILE"
    else
        echo ""
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
start_server() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ $PROJECT_NAME...${NC}"
    
    if is_server_running; then
        local pid=$(get_server_pid)
        echo -e "${YELLOW}‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $pid)${NC}"
        return 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -f "$SERVER_FILE" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: $SERVER_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ node —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v "$NODE_BIN" &> /dev/null; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: $NODE_BIN –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
    if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ü–æ—Ä—Ç $PORT —É–∂–µ –∑–∞–Ω—è—Ç${NC}"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    echo -e "${CYAN}üìù –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É $PORT...${NC}"
    
    nohup "$NODE_BIN" "$SERVER_FILE" > "$LOG_FILE" 2>&1 &
    local pid=$!
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    echo "$pid" > "$PID_FILE"
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    sleep 2
    
    if is_server_running; then
        echo -e "${GREEN}‚úÖ $PROJECT_NAME —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: $pid)${NC}"
        echo -e "${GREEN}üåê URL: http://localhost:$PORT${NC}"
        echo -e "${GREEN}üìù –õ–æ–≥–∏: $LOG_FILE${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä${NC}"
        rm -f "$PID_FILE"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
stop_server() {
    echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ $PROJECT_NAME...${NC}"
    
    if ! is_server_running; then
        echo -e "${YELLOW}‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        return 0
    fi
    
    local pid=$(get_server_pid)
    echo -e "${CYAN}üìù –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ (PID: $pid)...${NC}"
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å gracefully
    kill "$pid" 2>/dev/null || true
    
    # –ñ–¥–µ–º –¥–æ 10 —Å–µ–∫—É–Ω–¥
    local count=0
    while [ $count -lt 10 ]; do
        if ! ps -p "$pid" > /dev/null 2>&1; then
            break
        fi
        sleep 1
        count=$((count + 1))
    done
    
    # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ –∂–∏–≤, —É–±–∏–≤–∞–µ–º –µ–≥–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
    if ps -p "$pid" > /dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞...${NC}"
        kill -9 "$pid" 2>/dev/null || true
    fi
    
    # –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª
    rm -f "$PID_FILE"
    
    echo -e "${GREEN}‚úÖ $PROJECT_NAME –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
restart_server() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $PROJECT_NAME...${NC}"
    
    stop_server
    sleep 1
    start_server
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å $PROJECT_NAME${NC}"
    echo ""
    
    if is_server_running; then
        local pid=$(get_server_pid)
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω${NC}"
        echo -e "   PID: $pid"
        echo -e "   –ü–æ—Ä—Ç: $PORT"
        echo -e "   URL: http://localhost:$PORT"
        echo -e "   –õ–æ–≥–∏: $LOG_FILE"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞
        if curl -s "http://localhost:$PORT/api/projects" > /dev/null 2>&1; then
            echo -e "   –ó–¥–æ—Ä–æ–≤—å–µ: ${GREEN}‚úÖ OK${NC}"
        else
            echo -e "   –ó–¥–æ—Ä–æ–≤—å–µ: ${RED}‚ùå –û—à–∏–±–∫–∞${NC}"
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        echo ""
        echo -e "${CYAN}üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞:${NC}"
        ps -p "$pid" -o pid,ppid,cmd,etime,pcpu,pmem --no-headers 2>/dev/null || echo "   –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
    else
        echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        echo -e "   PID —Ñ–∞–π–ª: $PID_FILE"
        echo -e "   –õ–æ–≥–∏: $LOG_FILE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${BLUE}üìù –õ–æ–≥–∏ $PROJECT_NAME${NC}"
    echo ""
    
    if [ -f "$LOG_FILE" ]; then
        if [ -s "$LOG_FILE" ]; then
            tail -n 50 "$LOG_FILE"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª –ª–æ–≥–æ–≤ –ø—É—Å—Ç${NC}"
        fi
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
check_health() {
    echo -e "${BLUE}üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è $PROJECT_NAME${NC}"
    echo ""
    
    if ! is_server_running; then
        echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        return 1
    fi
    
    local pid=$(get_server_pid)
    echo -e "üìä –ü—Ä–æ—Ü–µ—Å—Å: ${GREEN}‚úÖ –ó–∞–ø—É—â–µ–Ω (PID: $pid)${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo -e "üåê –ü–æ—Ä—Ç $PORT: ${GREEN}‚úÖ –û—Ç–∫—Ä—ã—Ç${NC}"
    else
        echo -e "üåê –ü–æ—Ä—Ç $PORT: ${RED}‚ùå –ó–∞–∫—Ä—ã—Ç${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if curl -s "http://localhost:$PORT/api/projects" > /dev/null 2>&1; then
        echo -e "üîå API: ${GREEN}‚úÖ –û—Ç–≤–µ—á–∞–µ—Ç${NC}"
    else
        echo -e "üîå API: ${RED}‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É
    if curl -s "http://localhost:$PORT/" | grep -q "MBKanban"; then
        echo -e "üåê –í–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${GREEN}‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è${NC}"
    else
        echo -e "üåê –í–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${RED}‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è${NC}"
        return 1
    fi
    
    echo ""
    echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞ $PROJECT_NAME${NC}"
    
    stop_server
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã
    rm -f "$PID_FILE"
    rm -f "$LOG_FILE"
    
    echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    "start")
        start_server
        ;;
    "stop")
        stop_server
        ;;
    "restart")
        restart_server
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs
        ;;
    "health")
        check_health
        ;;
    "cleanup")
        cleanup
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac
